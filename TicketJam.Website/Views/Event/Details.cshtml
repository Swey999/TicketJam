@using TicketJam.Website.APIClient.DTO
@model TicketJam.Website.APIClient.DTO.Event

@{
    ViewData["Title"] = "Event Details";
}

<h1>Event Details</h1>
<hr />

<!-- Event Information -->
<div class="row">
    <div class="col-md-6">
        <h4>Event Information</h4>
        <dl class="row">
            <dt class="col-sm-4">Event Total Amount</dt>
            <dd class="col-sm-8">@Model.TotalAmount.ToString()</dd>

            <dt class="col-sm-4">Sale starts:</dt>
            <dd class="col-sm-8">@Model.StartDate.ToString("d")</dd>

            <dt class="col-sm-4">Sale ends:</dt>
            <dd class="col-sm-8">@Model.EndDate.ToString("d")</dd>

            <dt class="col-sm-4">Name</dt>
            <dd class="col-sm-8">@Model.Name</dd>
        </dl>
    </div>
</div>
<hr />

<!-- Tickets Dropdown -->
<div class="row">
    <div class="col-md-12">
        <h4>Available Tickets</h4>
        @if (Model.TicketList != null && Model.TicketList.Any())
        {
            <select id="ticketDropdown" class="form-control">
                <option value="" disabled selected>Select a ticket</option>
                @foreach (var ticket in Model.TicketList)
                {
                    <option value="@ticket.Id">@ticket.TicketCategory</option>
                }
            </select>

            <div id="ticketDetails" class="mt-4" style="display: none;">
                <h5>Ticket Details</h5>
                <dl class="row">
                    <dt class="col-sm-4">Venue Name</dt>
                    <dd class="col-sm-8" id="venueName"></dd>

                    <dt class="col-sm-4">Ticket Category</dt>
                    <dd class="col-sm-8" id="ticketCategory"></dd>

                    <dt class="col-sm-4">Price</dt>
                    <dd class="col-sm-8" id="ticketPrice"></dd>

                    <dt class="col-sm-4">Section Description</dt>
                    <dd class="col-sm-8" id="sectionDescription"></dd>

                    <dt class="col-sm-4">Ticket Amount</dt>
                    <dd class="col-sm-8" id="ticketAmount"></dd>

                    <dt class="col-sm-4">Select Quantity</dt>
                    <dd class="col-sm-8">
                        <input type="number" id="ticketQuantity" class="form-control" value="1" min="1" max="10" />
                    </dd>
                </dl>

                <a id="addToBasketLink" class="btn-sm btn-custom" href="#">

                    Add to basket<span class="bi-cart-plus"></span>
                </a>

            </div>
        }
        else
        {
            <p>No tickets available.</p>
        }
    </div>
</div>

<hr />

<!-- Back Button -->
<div class="form-group">
    <a class="btn btn-secondary" href="@Url.Action("Index", "Event")">Back to List</a>
</div>

<style>
    .btn-custom {
        background-color: #e74c3c;
        color: #fff;
        border: none;
        text-decoration: none;
        font-weight: bold;
    }

        .btn-custom:hover {
            background-color: #b93d31;
            color: #fff;
            text-decoration: none;
            font-weight: bold;
        }

        .btn-custom span {
            margin-left: 10px;
        }
</style>

<!-- JavaScript for Interactivity -->
<script>
    document.addEventListener('DOMContentLoaded', function () {

        const ticketDetails = document.getElementById('ticketDetails');
        const venueName = document.getElementById('venueName');
        const ticketCategory = document.getElementById('ticketCategory');
        const ticketPrice = document.getElementById('ticketPrice');
        const sectionDescription = document.getElementById('sectionDescription');
        const ticketAmount = document.getElementById('ticketAmount');
        const ticketQuantityInput = document.getElementById('ticketQuantity');
        const addToBasketLink = document.getElementById('addToBasketLink');
        const ticketDropdown = document.getElementById('ticketDropdown');

        // Ticket data (populated server-side into JavaScript object)
        const tickets = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TicketList));

        ticketDropdown.addEventListener('change', function () {
            const selectedTicketId = this.value;
            const selectedTicket = tickets.find(ticket => ticket.Id.toString() === selectedTicketId);

            if (selectedTicket) {
                venueName.textContent = selectedTicket.Section?.Venue?.Name || "N/A";
                ticketCategory.textContent = selectedTicket.TicketCategory || "N/A";
                ticketPrice.textContent = selectedTicket.Price?.toLocaleString(undefined, { style: 'currency', currency: 'DKK' }) || "N/A";
                sectionDescription.textContent = selectedTicket.Section?.Description || "N/A";
                ticketAmount.textContent = selectedTicket.Section?.TicketAmount || "N/A";

                // Update Add to Basket link dynamically
                updateAddToBasketLink(selectedTicket.Id);

                ticketDetails.style.display = 'block';
            }
        });

        // Update the Add to Basket link whenever quantity changes
        ticketQuantityInput.addEventListener('input', function () {
            const selectedTicketId = ticketDropdown.value;
            updateAddToBasketLink(selectedTicketId);
        });

        function updateAddToBasketLink(ticketId) {
            const quantity = ticketQuantityInput.value || 1; // Default to 1 if empty
            addToBasketLink.href = `@Url.Action("Add", "Event")?id=${ticketId}&quantity=${quantity}`;
        }
    });

</script>
